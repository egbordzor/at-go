package design

import (
	. "goa.design/goa/v3/dsl"
	_ "goa.design/plugins/v3/docs"      // Generates documentation
	_ "goa.design/plugins/v3/goakit"    // Enables goakit
	_ "goa.design/plugins/v3/zaplogger" // Enables ZapLogger Plugin
)

// Card Checkout APIs allow your application to collect money into
// your Payment Wallet by initiating transactions that deduct money
// from a customers Debit or Credit Card.
//
// These APIs are currently only available in Nigeria on MasterCard and Verve cards.
var CardCheckoutPayload = Type("CardCheckoutPayload", func() {
	Description("Card Checkout HTTP request.")

	Attribute("username", String, "Africa’s Talking application username.")
	Attribute("productName", String, "Africa’s Talking Payment Product initiating transaction.")
	Attribute("paymentCard", func() {
		Attribute("number", String, "Payment card number.")
		Attribute("cvvNumber", Int, "3 or 4 digit payment card verification value.")
		Attribute("expiryMonth", Int, "Expiration month on the payment card.")
		Attribute("expiryYear", Int, "Expiration year on the payment card.")
		Attribute("countryCode", String, func() {

			//  Only “NG” is currently supported
			Description("2-Digit country code where the payment card was issued.")
			Enum("NG")
			Default("NG")
		})

		// You can EITHER provide a paymentCard
		// or a checkoutToken if you have one.
		Attribute("authToken", String, "The payment cards ATM PIN.")
		Required("number", "cvvNumber", "expiryMonth", "expiryYear", "countryCode", "authToken")
	})

	// As result of charging a users payment card in a previous transaction.
	// Please note: When using a checkoutToken, the paymentCard data should NOT be populated.
	Attribute("checkoutToken", String, "Token generated by AfricasTalking")
	Attribute("currencyCode", String, func() {
		Description("3-digit ISO format currency code.")
		Example("KES")
	})
	Attribute("amount", Float64, func() {
		Description("Amount client is expected to confirm.")
	})
	Attribute("narration", String, "Short description of the transaction.")
	Attribute("metadata", MapOf(String, String), "Metadata associated with the request.")
	Required("username", "productName", "currencyCode", "amount", "narration")
})

var CardCheckoutResponse = ResultType("CardCheckoutResponse", func() {
	Description("Card Checkout HTTP response.")
	TypeName("CardCheckoutResponse")
	ContentType("application/json")

	Attributes(func() {
		Attribute("status", String, func() {
			Description("The status of the request.")
			Enum(
				// The request has been accepted.
				// Your application should provide the user
				// a way to enter the OTP sent to them by
				// the payment card provider and finally send
				// that to us using a card checkout validate request.
				"PendingConfirmation",

				// This means that the transaction has been
				// completed and there is no further validation required.
				// This can only happen in the case where you initiate
				// a charge with a checkoutToken
				"Success",

				// The request could not be accepted as one of the
				// fields was invalid.
				// The description field will contain more information.
				"InvalidRequest",

				// Checkout to the provided payment card is not supported.
				"NotSupported",

				// The request failed for some other reason.
				// The description filed will contain more information.
				"Failed",
			)
			Example("PendingValidation")
		})
		Attribute("description", String, func() {
			Description("A detailed description of the request status.")
			Example("Waiting for user input")
		})
		Attribute("transactionId", String, func() {
			Description("Unique ID generated for successful requests.")
			Example("ATPid_SampleTxnId123")
		})
	})

	View("default", func() {
		Attribute("status")
		Attribute("description")
		Attribute("transactionId")
	})
})
