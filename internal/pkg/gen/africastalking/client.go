// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking client
//
// Command:
// $ goa gen github.com/wondenge/at-go/design -o internal/pkg

package africastalking

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "africastalking" service client.
type Client struct {
	SendBulkSMSEndpoint              endpoint.Endpoint
	SendPremiumSMSEndpoint           endpoint.Endpoint
	FetchSMSEndpoint                 endpoint.Endpoint
	NewCheckoutTokenEndpoint         endpoint.Endpoint
	NewPremiumSubscriptionEndpoint   endpoint.Endpoint
	FetchPremiumSubscriptionEndpoint endpoint.Endpoint
	PurgePremiumSubscriptionEndpoint endpoint.Endpoint
	MakeCallEndpoint                 endpoint.Endpoint
	TransferCallEndpoint             endpoint.Endpoint
	SayEndpoint                      endpoint.Endpoint
	PlayEndpoint                     endpoint.Endpoint
	GetDigitsEndpoint                endpoint.Endpoint
	DialEndpoint                     endpoint.Endpoint
	RecordEndpoint                   endpoint.Endpoint
	EnqueueEndpoint                  endpoint.Endpoint
	DequeueEndpoint                  endpoint.Endpoint
	RedirectEndpoint                 endpoint.Endpoint
	RejectEndpoint                   endpoint.Endpoint
	QueueEndpoint                    endpoint.Endpoint
	UploadMediaEndpoint              endpoint.Endpoint
	MobileCheckoutEndpoint           endpoint.Endpoint
	MobileB2CEndpoint                endpoint.Endpoint
	MobileB2BEndpoint                endpoint.Endpoint
	BankCheckoutEndpoint             endpoint.Endpoint
	BankCheckoutValidateEndpoint     endpoint.Endpoint
	BankTransferEndpoint             endpoint.Endpoint
	CardCheckoutEndpoint             endpoint.Endpoint
	CardCheckoutValidateEndpoint     endpoint.Endpoint
	WalletTransferEndpoint           endpoint.Endpoint
	TopupStashEndpoint               endpoint.Endpoint
	SendAirtimeEndpoint              endpoint.Endpoint
	PublishIoTEndpoint               endpoint.Endpoint
	InitiateAppDataEndpoint          endpoint.Endpoint
	GenerateEndpoint                 endpoint.Endpoint
}

// NewClient initializes a "africastalking" service client given the endpoints.
func NewClient(sendBulkSMS, sendPremiumSMS, fetchSMS, newCheckoutToken, newPremiumSubscription, fetchPremiumSubscription, purgePremiumSubscription, makeCall, transferCall, say, play, getDigits, dial, record, enqueue, dequeue, redirect, reject, queue, uploadMedia, mobileCheckout, mobileB2C, mobileB2B, bankCheckout, bankCheckoutValidate, bankTransfer, cardCheckout, cardCheckoutValidate, walletTransfer, topupStash, sendAirtime, publishIoT, initiateAppData, generate endpoint.Endpoint) *Client {
	return &Client{
		SendBulkSMSEndpoint:              sendBulkSMS,
		SendPremiumSMSEndpoint:           sendPremiumSMS,
		FetchSMSEndpoint:                 fetchSMS,
		NewCheckoutTokenEndpoint:         newCheckoutToken,
		NewPremiumSubscriptionEndpoint:   newPremiumSubscription,
		FetchPremiumSubscriptionEndpoint: fetchPremiumSubscription,
		PurgePremiumSubscriptionEndpoint: purgePremiumSubscription,
		MakeCallEndpoint:                 makeCall,
		TransferCallEndpoint:             transferCall,
		SayEndpoint:                      say,
		PlayEndpoint:                     play,
		GetDigitsEndpoint:                getDigits,
		DialEndpoint:                     dial,
		RecordEndpoint:                   record,
		EnqueueEndpoint:                  enqueue,
		DequeueEndpoint:                  dequeue,
		RedirectEndpoint:                 redirect,
		RejectEndpoint:                   reject,
		QueueEndpoint:                    queue,
		UploadMediaEndpoint:              uploadMedia,
		MobileCheckoutEndpoint:           mobileCheckout,
		MobileB2CEndpoint:                mobileB2C,
		MobileB2BEndpoint:                mobileB2B,
		BankCheckoutEndpoint:             bankCheckout,
		BankCheckoutValidateEndpoint:     bankCheckoutValidate,
		BankTransferEndpoint:             bankTransfer,
		CardCheckoutEndpoint:             cardCheckout,
		CardCheckoutValidateEndpoint:     cardCheckoutValidate,
		WalletTransferEndpoint:           walletTransfer,
		TopupStashEndpoint:               topupStash,
		SendAirtimeEndpoint:              sendAirtime,
		PublishIoTEndpoint:               publishIoT,
		InitiateAppDataEndpoint:          initiateAppData,
		GenerateEndpoint:                 generate,
	}
}

// SendBulkSMS calls the "SendBulkSMS" endpoint of the "africastalking" service.
func (c *Client) SendBulkSMS(ctx context.Context, p *BulkPayload) (res *BulkResponse, err error) {
	var ires interface{}
	ires, err = c.SendBulkSMSEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BulkResponse), nil
}

// SendPremiumSMS calls the "SendPremiumSMS" endpoint of the "africastalking"
// service.
func (c *Client) SendPremiumSMS(ctx context.Context, p *PremiumPayload) (res *PremiumSMSResponse, err error) {
	var ires interface{}
	ires, err = c.SendPremiumSMSEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PremiumSMSResponse), nil
}

// FetchSMS calls the "FetchSMS" endpoint of the "africastalking" service.
func (c *Client) FetchSMS(ctx context.Context, p *FetchMsgPayload) (res *FetchMsgResponse, err error) {
	var ires interface{}
	ires, err = c.FetchSMSEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FetchMsgResponse), nil
}

// NewCheckoutToken calls the "NewCheckoutToken" endpoint of the
// "africastalking" service.
func (c *Client) NewCheckoutToken(ctx context.Context, p *CheckoutTokenPayload) (res *CheckoutTokenResponse, err error) {
	var ires interface{}
	ires, err = c.NewCheckoutTokenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CheckoutTokenResponse), nil
}

// NewPremiumSubscription calls the "NewPremiumSubscription" endpoint of the
// "africastalking" service.
func (c *Client) NewPremiumSubscription(ctx context.Context, p *NewSubPayload) (res *NewSubResponse, err error) {
	var ires interface{}
	ires, err = c.NewPremiumSubscriptionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*NewSubResponse), nil
}

// FetchPremiumSubscription calls the "FetchPremiumSubscription" endpoint of
// the "africastalking" service.
func (c *Client) FetchPremiumSubscription(ctx context.Context, p *FetchSubPayload) (res *FetchSubResponse, err error) {
	var ires interface{}
	ires, err = c.FetchPremiumSubscriptionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FetchSubResponse), nil
}

// PurgePremiumSubscription calls the "PurgePremiumSubscription" endpoint of
// the "africastalking" service.
func (c *Client) PurgePremiumSubscription(ctx context.Context, p *PurgeSubPayload) (res *PurgeSubResponse, err error) {
	var ires interface{}
	ires, err = c.PurgePremiumSubscriptionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PurgeSubResponse), nil
}

// MakeCall calls the "MakeCall" endpoint of the "africastalking" service.
func (c *Client) MakeCall(ctx context.Context, p *MakeCallPayload) (res *MakeCallResponse, err error) {
	var ires interface{}
	ires, err = c.MakeCallEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MakeCallResponse), nil
}

// TransferCall calls the "TransferCall" endpoint of the "africastalking"
// service.
func (c *Client) TransferCall(ctx context.Context, p *CallTransferPayload) (res *Calltransferresponse, err error) {
	var ires interface{}
	ires, err = c.TransferCallEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Calltransferresponse), nil
}

// Say calls the "Say" endpoint of the "africastalking" service.
func (c *Client) Say(ctx context.Context, p *Say1) (res string, err error) {
	var ires interface{}
	ires, err = c.SayEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Play calls the "Play" endpoint of the "africastalking" service.
func (c *Client) Play(ctx context.Context, p *Play1) (res string, err error) {
	var ires interface{}
	ires, err = c.PlayEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// GetDigits calls the "GetDigits" endpoint of the "africastalking" service.
func (c *Client) GetDigits(ctx context.Context, p *GetDigits1) (res string, err error) {
	var ires interface{}
	ires, err = c.GetDigitsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Dial calls the "Dial" endpoint of the "africastalking" service.
func (c *Client) Dial(ctx context.Context, p *Dial1) (res string, err error) {
	var ires interface{}
	ires, err = c.DialEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Record calls the "Record" endpoint of the "africastalking" service.
func (c *Client) Record(ctx context.Context, p *Record1) (res string, err error) {
	var ires interface{}
	ires, err = c.RecordEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Enqueue calls the "Enqueue" endpoint of the "africastalking" service.
func (c *Client) Enqueue(ctx context.Context, p *Enqueue1) (res string, err error) {
	var ires interface{}
	ires, err = c.EnqueueEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Dequeue calls the "Dequeue" endpoint of the "africastalking" service.
func (c *Client) Dequeue(ctx context.Context, p *Dequeue1) (res string, err error) {
	var ires interface{}
	ires, err = c.DequeueEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Redirect calls the "Redirect" endpoint of the "africastalking" service.
func (c *Client) Redirect(ctx context.Context, p *Redirect1) (res string, err error) {
	var ires interface{}
	ires, err = c.RedirectEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Reject calls the "Reject" endpoint of the "africastalking" service.
func (c *Client) Reject(ctx context.Context, p *Reject1) (res string, err error) {
	var ires interface{}
	ires, err = c.RejectEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Queue calls the "Queue" endpoint of the "africastalking" service.
func (c *Client) Queue(ctx context.Context, p *QueuedCallsPayload) (res *Queuedstatusresult, err error) {
	var ires interface{}
	ires, err = c.QueueEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Queuedstatusresult), nil
}

// UploadMedia calls the "UploadMedia" endpoint of the "africastalking" service.
func (c *Client) UploadMedia(ctx context.Context, p *UploadMediaFile) (res string, err error) {
	var ires interface{}
	ires, err = c.UploadMediaEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// MobileCheckout calls the "MobileCheckout" endpoint of the "africastalking"
// service.
func (c *Client) MobileCheckout(ctx context.Context, p *MobileCheckoutPayload) (res *MobileCheckoutResponse, err error) {
	var ires interface{}
	ires, err = c.MobileCheckoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MobileCheckoutResponse), nil
}

// MobileB2C calls the "MobileB2C" endpoint of the "africastalking" service.
func (c *Client) MobileB2C(ctx context.Context, p *MobileB2CPayload) (res *MobileB2CResponse, err error) {
	var ires interface{}
	ires, err = c.MobileB2CEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MobileB2CResponse), nil
}

// MobileB2B calls the "MobileB2B" endpoint of the "africastalking" service.
func (c *Client) MobileB2B(ctx context.Context, p *MobileB2BPayload) (res *MobileB2BResponse, err error) {
	var ires interface{}
	ires, err = c.MobileB2BEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MobileB2BResponse), nil
}

// BankCheckout calls the "Bank Checkout" endpoint of the "africastalking"
// service.
func (c *Client) BankCheckout(ctx context.Context, p *BankCheckoutPayload) (res *BankCheckoutResponse, err error) {
	var ires interface{}
	ires, err = c.BankCheckoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BankCheckoutResponse), nil
}

// BankCheckoutValidate calls the "BankCheckoutValidate" endpoint of the
// "africastalking" service.
func (c *Client) BankCheckoutValidate(ctx context.Context, p *BankCheckoutValidatePayload) (res *BankCheckoutValidateResponse, err error) {
	var ires interface{}
	ires, err = c.BankCheckoutValidateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BankCheckoutValidateResponse), nil
}

// BankTransfer calls the "BankTransfer" endpoint of the "africastalking"
// service.
func (c *Client) BankTransfer(ctx context.Context, p *BankTransferPayload) (res *BankTransferResponse, err error) {
	var ires interface{}
	ires, err = c.BankTransferEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BankTransferResponse), nil
}

// CardCheckout calls the "CardCheckout" endpoint of the "africastalking"
// service.
func (c *Client) CardCheckout(ctx context.Context, p *CardCheckoutPayload) (res *CardCheckoutResponse, err error) {
	var ires interface{}
	ires, err = c.CardCheckoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CardCheckoutResponse), nil
}

// CardCheckoutValidate calls the "CardCheckoutValidate" endpoint of the
// "africastalking" service.
func (c *Client) CardCheckoutValidate(ctx context.Context, p *CardCheckoutValidatePayload) (res *CardCheckoutValidateResponse, err error) {
	var ires interface{}
	ires, err = c.CardCheckoutValidateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CardCheckoutValidateResponse), nil
}

// WalletTransfer calls the "WalletTransfer" endpoint of the "africastalking"
// service.
func (c *Client) WalletTransfer(ctx context.Context, p *WalletTransferPayload) (res *WalletTransferResponse, err error) {
	var ires interface{}
	ires, err = c.WalletTransferEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*WalletTransferResponse), nil
}

// TopupStash calls the "TopupStash" endpoint of the "africastalking" service.
func (c *Client) TopupStash(ctx context.Context, p *TopupStashPayload) (res *TopupStashResponse, err error) {
	var ires interface{}
	ires, err = c.TopupStashEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TopupStashResponse), nil
}

// SendAirtime calls the "SendAirtime" endpoint of the "africastalking" service.
func (c *Client) SendAirtime(ctx context.Context, p *AirtimePayload) (res *AirtimeResponse, err error) {
	var ires interface{}
	ires, err = c.SendAirtimeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AirtimeResponse), nil
}

// PublishIoT calls the "PublishIoT" endpoint of the "africastalking" service.
func (c *Client) PublishIoT(ctx context.Context, p *IoTPayload) (res *IoTResponse, err error) {
	var ires interface{}
	ires, err = c.PublishIoTEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*IoTResponse), nil
}

// InitiateAppData calls the "InitiateAppData" endpoint of the "africastalking"
// service.
func (c *Client) InitiateAppData(ctx context.Context, p string) (res *UserResponse, err error) {
	var ires interface{}
	ires, err = c.InitiateAppDataEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UserResponse), nil
}

// Generate calls the "Generate" endpoint of the "africastalking" service.
func (c *Client) Generate(ctx context.Context, p *GeneratePayload) (res *AccessTokenResponse, err error) {
	var ires interface{}
	ires, err = c.GenerateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccessTokenResponse), nil
}
