// Code generated by goa v3.1.3, DO NOT EDIT.
//
// at HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/at-go/design -o internal/pkg

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	"github.com/go-kit/kit/endpoint"
	africastalkingc "github.com/wondenge/at-go/internal/pkg/gen/http/africastalking/client"
	goahttp "goa.design/goa/v3/http"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `africastalking (send-bulk-sms|send-premium-sms|fetch-sms|new-checkout-token|new-premium-subscription|fetch-premium-subscription|purge-premium-subscription|make-call|transfer-call|say|play|get-digits|dial|record|enqueue|dequeue|redirect|reject|queue|upload-media|mobile-checkout|mobile-b2-c|mobile-b2-b|bank- -checkout|bank-checkout-validate|bank-transfer|card-checkout|card-checkout-validate|wallet-transfer|topup-stash|send-airtime|publish-io-t|initiate-app-data|generate)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` africastalking send-bulk-sms --body '{
      "bulkSMSMode": 183103216611454320,
      "enqueue": 1,
      "from": "Et alias commodi laudantium vel quibusdam.",
      "keyword": "Qui velit voluptatem nulla.",
      "linkId": "Maiores enim expedita quis nulla dolorem.",
      "message": "Quia adipisci laudantium similique tenetur.",
      "retryDurationInHours": "Qui maiores.",
      "to": "Et quibusdam.",
      "username": "Vel fugit maiores minus aut dolores nisi."
   }'` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (endpoint.Endpoint, interface{}, error) {
	var (
		africastalkingFlags = flag.NewFlagSet("africastalking", flag.ContinueOnError)

		africastalkingSendBulkSMSFlags    = flag.NewFlagSet("send-bulk-sms", flag.ExitOnError)
		africastalkingSendBulkSMSBodyFlag = africastalkingSendBulkSMSFlags.String("body", "REQUIRED", "")

		africastalkingSendPremiumSMSFlags    = flag.NewFlagSet("send-premium-sms", flag.ExitOnError)
		africastalkingSendPremiumSMSBodyFlag = africastalkingSendPremiumSMSFlags.String("body", "REQUIRED", "")

		africastalkingFetchSMSFlags              = flag.NewFlagSet("fetch-sms", flag.ExitOnError)
		africastalkingFetchSMSUsernameFlag       = africastalkingFetchSMSFlags.String("username", "sandbox", "")
		africastalkingFetchSMSLastReceivedIDFlag = africastalkingFetchSMSFlags.String("last-received-id", "0", "")

		africastalkingNewCheckoutTokenFlags    = flag.NewFlagSet("new-checkout-token", flag.ExitOnError)
		africastalkingNewCheckoutTokenBodyFlag = africastalkingNewCheckoutTokenFlags.String("body", "REQUIRED", "")

		africastalkingNewPremiumSubscriptionFlags    = flag.NewFlagSet("new-premium-subscription", flag.ExitOnError)
		africastalkingNewPremiumSubscriptionBodyFlag = africastalkingNewPremiumSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingFetchPremiumSubscriptionFlags              = flag.NewFlagSet("fetch-premium-subscription", flag.ExitOnError)
		africastalkingFetchPremiumSubscriptionUsernameFlag       = africastalkingFetchPremiumSubscriptionFlags.String("username", "sandbox", "")
		africastalkingFetchPremiumSubscriptionShortCodeFlag      = africastalkingFetchPremiumSubscriptionFlags.String("short-code", "REQUIRED", "")
		africastalkingFetchPremiumSubscriptionKeywordFlag        = africastalkingFetchPremiumSubscriptionFlags.String("keyword", "REQUIRED", "")
		africastalkingFetchPremiumSubscriptionLastReceivedIDFlag = africastalkingFetchPremiumSubscriptionFlags.String("last-received-id", "0", "")

		africastalkingPurgePremiumSubscriptionFlags    = flag.NewFlagSet("purge-premium-subscription", flag.ExitOnError)
		africastalkingPurgePremiumSubscriptionBodyFlag = africastalkingPurgePremiumSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingMakeCallFlags    = flag.NewFlagSet("make-call", flag.ExitOnError)
		africastalkingMakeCallBodyFlag = africastalkingMakeCallFlags.String("body", "REQUIRED", "")

		africastalkingTransferCallFlags    = flag.NewFlagSet("transfer-call", flag.ExitOnError)
		africastalkingTransferCallBodyFlag = africastalkingTransferCallFlags.String("body", "REQUIRED", "")

		africastalkingSayFlags    = flag.NewFlagSet("say", flag.ExitOnError)
		africastalkingSayBodyFlag = africastalkingSayFlags.String("body", "REQUIRED", "")

		africastalkingPlayFlags    = flag.NewFlagSet("play", flag.ExitOnError)
		africastalkingPlayBodyFlag = africastalkingPlayFlags.String("body", "REQUIRED", "")

		africastalkingGetDigitsFlags    = flag.NewFlagSet("get-digits", flag.ExitOnError)
		africastalkingGetDigitsBodyFlag = africastalkingGetDigitsFlags.String("body", "REQUIRED", "")

		africastalkingDialFlags    = flag.NewFlagSet("dial", flag.ExitOnError)
		africastalkingDialBodyFlag = africastalkingDialFlags.String("body", "REQUIRED", "")

		africastalkingRecordFlags    = flag.NewFlagSet("record", flag.ExitOnError)
		africastalkingRecordBodyFlag = africastalkingRecordFlags.String("body", "REQUIRED", "")

		africastalkingEnqueueFlags    = flag.NewFlagSet("enqueue", flag.ExitOnError)
		africastalkingEnqueueBodyFlag = africastalkingEnqueueFlags.String("body", "REQUIRED", "")

		africastalkingDequeueFlags    = flag.NewFlagSet("dequeue", flag.ExitOnError)
		africastalkingDequeueBodyFlag = africastalkingDequeueFlags.String("body", "REQUIRED", "")

		africastalkingRedirectFlags    = flag.NewFlagSet("redirect", flag.ExitOnError)
		africastalkingRedirectBodyFlag = africastalkingRedirectFlags.String("body", "REQUIRED", "")

		africastalkingRejectFlags    = flag.NewFlagSet("reject", flag.ExitOnError)
		africastalkingRejectBodyFlag = africastalkingRejectFlags.String("body", "REQUIRED", "")

		africastalkingQueueFlags    = flag.NewFlagSet("queue", flag.ExitOnError)
		africastalkingQueueBodyFlag = africastalkingQueueFlags.String("body", "REQUIRED", "")

		africastalkingUploadMediaFlags    = flag.NewFlagSet("upload-media", flag.ExitOnError)
		africastalkingUploadMediaBodyFlag = africastalkingUploadMediaFlags.String("body", "REQUIRED", "")

		africastalkingMobileCheckoutFlags    = flag.NewFlagSet("mobile-checkout", flag.ExitOnError)
		africastalkingMobileCheckoutBodyFlag = africastalkingMobileCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingMobileB2CFlags    = flag.NewFlagSet("mobile-b2-c", flag.ExitOnError)
		africastalkingMobileB2CBodyFlag = africastalkingMobileB2CFlags.String("body", "REQUIRED", "")

		africastalkingMobileB2BFlags    = flag.NewFlagSet("mobile-b2-b", flag.ExitOnError)
		africastalkingMobileB2BBodyFlag = africastalkingMobileB2BFlags.String("body", "REQUIRED", "")

		africastalkingBankCheckoutFlags    = flag.NewFlagSet("bank- -checkout", flag.ExitOnError)
		africastalkingBankCheckoutBodyFlag = africastalkingBankCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingBankCheckoutValidateFlags    = flag.NewFlagSet("bank-checkout-validate", flag.ExitOnError)
		africastalkingBankCheckoutValidateBodyFlag = africastalkingBankCheckoutValidateFlags.String("body", "REQUIRED", "")

		africastalkingBankTransferFlags    = flag.NewFlagSet("bank-transfer", flag.ExitOnError)
		africastalkingBankTransferBodyFlag = africastalkingBankTransferFlags.String("body", "REQUIRED", "")

		africastalkingCardCheckoutFlags    = flag.NewFlagSet("card-checkout", flag.ExitOnError)
		africastalkingCardCheckoutBodyFlag = africastalkingCardCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingCardCheckoutValidateFlags    = flag.NewFlagSet("card-checkout-validate", flag.ExitOnError)
		africastalkingCardCheckoutValidateBodyFlag = africastalkingCardCheckoutValidateFlags.String("body", "REQUIRED", "")

		africastalkingWalletTransferFlags    = flag.NewFlagSet("wallet-transfer", flag.ExitOnError)
		africastalkingWalletTransferBodyFlag = africastalkingWalletTransferFlags.String("body", "REQUIRED", "")

		africastalkingTopupStashFlags    = flag.NewFlagSet("topup-stash", flag.ExitOnError)
		africastalkingTopupStashBodyFlag = africastalkingTopupStashFlags.String("body", "REQUIRED", "")

		africastalkingSendAirtimeFlags    = flag.NewFlagSet("send-airtime", flag.ExitOnError)
		africastalkingSendAirtimeBodyFlag = africastalkingSendAirtimeFlags.String("body", "REQUIRED", "")

		africastalkingPublishIoTFlags    = flag.NewFlagSet("publish-io-t", flag.ExitOnError)
		africastalkingPublishIoTBodyFlag = africastalkingPublishIoTFlags.String("body", "REQUIRED", "")

		africastalkingInitiateAppDataFlags = flag.NewFlagSet("initiate-app-data", flag.ExitOnError)
		africastalkingInitiateAppDataPFlag = africastalkingInitiateAppDataFlags.String("p", "REQUIRED", "string is the payload type of the africastalking service InitiateAppData method.")

		africastalkingGenerateFlags    = flag.NewFlagSet("generate", flag.ExitOnError)
		africastalkingGenerateBodyFlag = africastalkingGenerateFlags.String("body", "REQUIRED", "")
	)
	africastalkingFlags.Usage = africastalkingUsage
	africastalkingSendBulkSMSFlags.Usage = africastalkingSendBulkSMSUsage
	africastalkingSendPremiumSMSFlags.Usage = africastalkingSendPremiumSMSUsage
	africastalkingFetchSMSFlags.Usage = africastalkingFetchSMSUsage
	africastalkingNewCheckoutTokenFlags.Usage = africastalkingNewCheckoutTokenUsage
	africastalkingNewPremiumSubscriptionFlags.Usage = africastalkingNewPremiumSubscriptionUsage
	africastalkingFetchPremiumSubscriptionFlags.Usage = africastalkingFetchPremiumSubscriptionUsage
	africastalkingPurgePremiumSubscriptionFlags.Usage = africastalkingPurgePremiumSubscriptionUsage
	africastalkingMakeCallFlags.Usage = africastalkingMakeCallUsage
	africastalkingTransferCallFlags.Usage = africastalkingTransferCallUsage
	africastalkingSayFlags.Usage = africastalkingSayUsage
	africastalkingPlayFlags.Usage = africastalkingPlayUsage
	africastalkingGetDigitsFlags.Usage = africastalkingGetDigitsUsage
	africastalkingDialFlags.Usage = africastalkingDialUsage
	africastalkingRecordFlags.Usage = africastalkingRecordUsage
	africastalkingEnqueueFlags.Usage = africastalkingEnqueueUsage
	africastalkingDequeueFlags.Usage = africastalkingDequeueUsage
	africastalkingRedirectFlags.Usage = africastalkingRedirectUsage
	africastalkingRejectFlags.Usage = africastalkingRejectUsage
	africastalkingQueueFlags.Usage = africastalkingQueueUsage
	africastalkingUploadMediaFlags.Usage = africastalkingUploadMediaUsage
	africastalkingMobileCheckoutFlags.Usage = africastalkingMobileCheckoutUsage
	africastalkingMobileB2CFlags.Usage = africastalkingMobileB2CUsage
	africastalkingMobileB2BFlags.Usage = africastalkingMobileB2BUsage
	africastalkingBankCheckoutFlags.Usage = africastalkingBankCheckoutUsage
	africastalkingBankCheckoutValidateFlags.Usage = africastalkingBankCheckoutValidateUsage
	africastalkingBankTransferFlags.Usage = africastalkingBankTransferUsage
	africastalkingCardCheckoutFlags.Usage = africastalkingCardCheckoutUsage
	africastalkingCardCheckoutValidateFlags.Usage = africastalkingCardCheckoutValidateUsage
	africastalkingWalletTransferFlags.Usage = africastalkingWalletTransferUsage
	africastalkingTopupStashFlags.Usage = africastalkingTopupStashUsage
	africastalkingSendAirtimeFlags.Usage = africastalkingSendAirtimeUsage
	africastalkingPublishIoTFlags.Usage = africastalkingPublishIoTUsage
	africastalkingInitiateAppDataFlags.Usage = africastalkingInitiateAppDataUsage
	africastalkingGenerateFlags.Usage = africastalkingGenerateUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "africastalking":
			svcf = africastalkingFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "africastalking":
			switch epn {
			case "send-bulk-sms":
				epf = africastalkingSendBulkSMSFlags

			case "send-premium-sms":
				epf = africastalkingSendPremiumSMSFlags

			case "fetch-sms":
				epf = africastalkingFetchSMSFlags

			case "new-checkout-token":
				epf = africastalkingNewCheckoutTokenFlags

			case "new-premium-subscription":
				epf = africastalkingNewPremiumSubscriptionFlags

			case "fetch-premium-subscription":
				epf = africastalkingFetchPremiumSubscriptionFlags

			case "purge-premium-subscription":
				epf = africastalkingPurgePremiumSubscriptionFlags

			case "make-call":
				epf = africastalkingMakeCallFlags

			case "transfer-call":
				epf = africastalkingTransferCallFlags

			case "say":
				epf = africastalkingSayFlags

			case "play":
				epf = africastalkingPlayFlags

			case "get-digits":
				epf = africastalkingGetDigitsFlags

			case "dial":
				epf = africastalkingDialFlags

			case "record":
				epf = africastalkingRecordFlags

			case "enqueue":
				epf = africastalkingEnqueueFlags

			case "dequeue":
				epf = africastalkingDequeueFlags

			case "redirect":
				epf = africastalkingRedirectFlags

			case "reject":
				epf = africastalkingRejectFlags

			case "queue":
				epf = africastalkingQueueFlags

			case "upload-media":
				epf = africastalkingUploadMediaFlags

			case "mobile-checkout":
				epf = africastalkingMobileCheckoutFlags

			case "mobile-b2-c":
				epf = africastalkingMobileB2CFlags

			case "mobile-b2-b":
				epf = africastalkingMobileB2BFlags

			case "bank- -checkout":
				epf = africastalkingBankCheckoutFlags

			case "bank-checkout-validate":
				epf = africastalkingBankCheckoutValidateFlags

			case "bank-transfer":
				epf = africastalkingBankTransferFlags

			case "card-checkout":
				epf = africastalkingCardCheckoutFlags

			case "card-checkout-validate":
				epf = africastalkingCardCheckoutValidateFlags

			case "wallet-transfer":
				epf = africastalkingWalletTransferFlags

			case "topup-stash":
				epf = africastalkingTopupStashFlags

			case "send-airtime":
				epf = africastalkingSendAirtimeFlags

			case "publish-io-t":
				epf = africastalkingPublishIoTFlags

			case "initiate-app-data":
				epf = africastalkingInitiateAppDataFlags

			case "generate":
				epf = africastalkingGenerateFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint endpoint.Endpoint
		err      error
	)
	{
		switch svcn {
		case "africastalking":
			c := africastalkingc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "send-bulk-sms":
				endpoint = c.SendBulkSMS()
				data, err = africastalkingc.BuildSendBulkSMSPayload(*africastalkingSendBulkSMSBodyFlag)
			case "send-premium-sms":
				endpoint = c.SendPremiumSMS()
				data, err = africastalkingc.BuildSendPremiumSMSPayload(*africastalkingSendPremiumSMSBodyFlag)
			case "fetch-sms":
				endpoint = c.FetchSMS()
				data, err = africastalkingc.BuildFetchSMSPayload(*africastalkingFetchSMSUsernameFlag, *africastalkingFetchSMSLastReceivedIDFlag)
			case "new-checkout-token":
				endpoint = c.NewCheckoutToken()
				data, err = africastalkingc.BuildNewCheckoutTokenPayload(*africastalkingNewCheckoutTokenBodyFlag)
			case "new-premium-subscription":
				endpoint = c.NewPremiumSubscription()
				data, err = africastalkingc.BuildNewPremiumSubscriptionPayload(*africastalkingNewPremiumSubscriptionBodyFlag)
			case "fetch-premium-subscription":
				endpoint = c.FetchPremiumSubscription()
				data, err = africastalkingc.BuildFetchPremiumSubscriptionPayload(*africastalkingFetchPremiumSubscriptionUsernameFlag, *africastalkingFetchPremiumSubscriptionShortCodeFlag, *africastalkingFetchPremiumSubscriptionKeywordFlag, *africastalkingFetchPremiumSubscriptionLastReceivedIDFlag)
			case "purge-premium-subscription":
				endpoint = c.PurgePremiumSubscription()
				data, err = africastalkingc.BuildPurgePremiumSubscriptionPayload(*africastalkingPurgePremiumSubscriptionBodyFlag)
			case "make-call":
				endpoint = c.MakeCall()
				data, err = africastalkingc.BuildMakeCallPayload(*africastalkingMakeCallBodyFlag)
			case "transfer-call":
				endpoint = c.TransferCall()
				data, err = africastalkingc.BuildTransferCallPayload(*africastalkingTransferCallBodyFlag)
			case "say":
				endpoint = c.Say()
				data, err = africastalkingc.BuildSayPayload(*africastalkingSayBodyFlag)
			case "play":
				endpoint = c.Play()
				data, err = africastalkingc.BuildPlayPayload(*africastalkingPlayBodyFlag)
			case "get-digits":
				endpoint = c.GetDigits()
				data, err = africastalkingc.BuildGetDigitsPayload(*africastalkingGetDigitsBodyFlag)
			case "dial":
				endpoint = c.Dial()
				data, err = africastalkingc.BuildDialPayload(*africastalkingDialBodyFlag)
			case "record":
				endpoint = c.Record()
				data, err = africastalkingc.BuildRecordPayload(*africastalkingRecordBodyFlag)
			case "enqueue":
				endpoint = c.Enqueue()
				data, err = africastalkingc.BuildEnqueuePayload(*africastalkingEnqueueBodyFlag)
			case "dequeue":
				endpoint = c.Dequeue()
				data, err = africastalkingc.BuildDequeuePayload(*africastalkingDequeueBodyFlag)
			case "redirect":
				endpoint = c.Redirect()
				data, err = africastalkingc.BuildRedirectPayload(*africastalkingRedirectBodyFlag)
			case "reject":
				endpoint = c.Reject()
				data, err = africastalkingc.BuildRejectPayload(*africastalkingRejectBodyFlag)
			case "queue":
				endpoint = c.Queue()
				data, err = africastalkingc.BuildQueuePayload(*africastalkingQueueBodyFlag)
			case "upload-media":
				endpoint = c.UploadMedia()
				data, err = africastalkingc.BuildUploadMediaPayload(*africastalkingUploadMediaBodyFlag)
			case "mobile-checkout":
				endpoint = c.MobileCheckout()
				data, err = africastalkingc.BuildMobileCheckoutPayload(*africastalkingMobileCheckoutBodyFlag)
			case "mobile-b2-c":
				endpoint = c.MobileB2C()
				data, err = africastalkingc.BuildMobileB2CPayload(*africastalkingMobileB2CBodyFlag)
			case "mobile-b2-b":
				endpoint = c.MobileB2B()
				data, err = africastalkingc.BuildMobileB2BPayload(*africastalkingMobileB2BBodyFlag)
			case "bank- -checkout":
				endpoint = c.BankCheckout()
				data, err = africastalkingc.BuildBankCheckoutPayload(*africastalkingBankCheckoutBodyFlag)
			case "bank-checkout-validate":
				endpoint = c.BankCheckoutValidate()
				data, err = africastalkingc.BuildBankCheckoutValidatePayload(*africastalkingBankCheckoutValidateBodyFlag)
			case "bank-transfer":
				endpoint = c.BankTransfer()
				data, err = africastalkingc.BuildBankTransferPayload(*africastalkingBankTransferBodyFlag)
			case "card-checkout":
				endpoint = c.CardCheckout()
				data, err = africastalkingc.BuildCardCheckoutPayload(*africastalkingCardCheckoutBodyFlag)
			case "card-checkout-validate":
				endpoint = c.CardCheckoutValidate()
				data, err = africastalkingc.BuildCardCheckoutValidatePayload(*africastalkingCardCheckoutValidateBodyFlag)
			case "wallet-transfer":
				endpoint = c.WalletTransfer()
				data, err = africastalkingc.BuildWalletTransferPayload(*africastalkingWalletTransferBodyFlag)
			case "topup-stash":
				endpoint = c.TopupStash()
				data, err = africastalkingc.BuildTopupStashPayload(*africastalkingTopupStashBodyFlag)
			case "send-airtime":
				endpoint = c.SendAirtime()
				data, err = africastalkingc.BuildSendAirtimePayload(*africastalkingSendAirtimeBodyFlag)
			case "publish-io-t":
				endpoint = c.PublishIoT()
				data, err = africastalkingc.BuildPublishIoTPayload(*africastalkingPublishIoTBodyFlag)
			case "initiate-app-data":
				endpoint = c.InitiateAppData()
				data = *africastalkingInitiateAppDataPFlag
			case "generate":
				endpoint = c.Generate()
				data, err = africastalkingc.BuildGeneratePayload(*africastalkingGenerateBodyFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// africastalkingUsage displays the usage of the africastalking command and its
// subcommands.
func africastalkingUsage() {
	fmt.Fprintf(os.Stderr, `Service is the africastalking service interface.
Usage:
    %s [globalflags] africastalking COMMAND [flags]

COMMAND:
    send-bulk-sms: Send Bulk SMS
    send-premium-sms: Send Premium SMS
    fetch-sms: Incrementally fetch messages from application inbox.
    new-checkout-token: Generate a checkout token
    new-premium-subscription: Subscribe a phone number
    fetch-premium-subscription: Incrementally fetch your premium sms subscriptions.
    purge-premium-subscription: Delete a Premium SMS Subscription
    make-call: Makes outbound calls.
    transfer-call: Transfers call to another number.
    say: Set a text to be read out to the caller.
    play: Play back an audio file located anywhere on the web.
    get-digits: Get digits a user enters on their phone in response to a prompt from application
    dial: Connect the user who called your phone number to an external phone number.
    record: Record a call session into an mp3 file.
    enqueue: Pass an incoming call to a queue to be handled later.
    dequeue: Pass the calls enqueued to a separate number to be handled.
    redirect: Transfer control of the call to the script whose URL is passed in.
    reject: Reject an incoming call without incurring any usage charges.
    queue: Used when you have more calls than you can handle at one time
    upload-media: Uploads media or audio files to Africa'sTalking servers with the extension .mp3 or .wav
    mobile-checkout: Initiate Mobile C2B payments on a mobile subscriber’s device.
    mobile-b2-c: Initiate Mobile B2C request
    mobile-b2-b: Initiate Mobile B2B request
    bank- -checkout: Collect money into your payment wallet.
    bank-checkout-validate: Validate a bank checkout charge request
    bank-transfer: Initiate a bank transfer request.
    card-checkout: Collect money into your Payment Wallet
    card-checkout-validate: Validate card checkout charge requests
    wallet-transfer: Transfer money from one product to another.
    topup-stash: Move money from a Payment Product to an application stash.
    send-airtime: Send Airtime.
    publish-io-t: Publishes messages to remote devices.
    initiate-app-data: Initiate an application data request.
    generate: Generates a valid auth token

Additional help:
    %s africastalking COMMAND --help
`, os.Args[0], os.Args[0])
}
func africastalkingSendBulkSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-bulk-sms -body JSON

Send Bulk SMS
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-bulk-sms --body '{
      "bulkSMSMode": 183103216611454320,
      "enqueue": 1,
      "from": "Et alias commodi laudantium vel quibusdam.",
      "keyword": "Qui velit voluptatem nulla.",
      "linkId": "Maiores enim expedita quis nulla dolorem.",
      "message": "Quia adipisci laudantium similique tenetur.",
      "retryDurationInHours": "Qui maiores.",
      "to": "Et quibusdam.",
      "username": "Vel fugit maiores minus aut dolores nisi."
   }'
`, os.Args[0])
}

func africastalkingSendPremiumSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-premium-sms -body JSON

Send Premium SMS
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-premium-sms --body '{
      "bulkSMSMode": 2827138256472368539,
      "enqueue": 1,
      "from": "Alias ipsum unde aut dolore cupiditate.",
      "keyword": "Quasi sed id incidunt praesentium dolorem.",
      "linkId": "Qui laborum quaerat adipisci et.",
      "message": "Eos repellat quo.",
      "retryDurationInHours": "Ut dolorum temporibus.",
      "to": "Dolores molestiae vel.",
      "username": "Et magnam maxime."
   }'
`, os.Args[0])
}

func africastalkingFetchSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-sms -username STRING -last-received-id STRING

Incrementally fetch messages from application inbox.
    -username STRING: 
    -last-received-id STRING: 

Example:
    `+os.Args[0]+` africastalking fetch-sms --username "Et nobis aut dolor." --last-received-id "Omnis repellat cupiditate voluptas est."
`, os.Args[0])
}

func africastalkingNewCheckoutTokenUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking new-checkout-token -body JSON

Generate a checkout token
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking new-checkout-token --body '{
      "phoneNumber": "Quibusdam omnis."
   }'
`, os.Args[0])
}

func africastalkingNewPremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking new-premium-subscription -body JSON

Subscribe a phone number
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking new-premium-subscription --body '{
      "checkoutToken": "",
      "keyword": "",
      "phoneNumber": "",
      "shortCode": "",
      "username": "Dolorem ad est."
   }'
`, os.Args[0])
}

func africastalkingFetchPremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-premium-subscription -username STRING -short-code STRING -keyword STRING -last-received-id STRING

Incrementally fetch your premium sms subscriptions.
    -username STRING: 
    -short-code STRING: 
    -keyword STRING: 
    -last-received-id STRING: 

Example:
    `+os.Args[0]+` africastalking fetch-premium-subscription --username "Tempora sint laborum repellat porro et." --short-code "" --keyword "" --last-received-id "Dolor sit."
`, os.Args[0])
}

func africastalkingPurgePremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking purge-premium-subscription -body JSON

Delete a Premium SMS Subscription
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking purge-premium-subscription --body '{
      "keyword": "",
      "phoneNumber": "",
      "shortCode": "",
      "username": "Repudiandae aut esse voluptate et et eos."
   }'
`, os.Args[0])
}

func africastalkingMakeCallUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking make-call -body JSON

Makes outbound calls.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking make-call --body '{
      "clientRequestId": "Et optio ut quod est.",
      "from": "Sequi vel odit nobis aut natus ut.",
      "to": "Aliquam dolorem.",
      "username": "Aut dolores est omnis repellat."
   }'
`, os.Args[0])
}

func africastalkingTransferCallUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking transfer-call -body JSON

Transfers call to another number.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking transfer-call --body '{
      "callLeg": "caller",
      "holdMusicUrl": "Quibusdam sapiente natus placeat.",
      "phoneNumber": "Et nihil excepturi.",
      "sessionId": "Sint voluptas esse dolore et."
   }'
`, os.Args[0])
}

func africastalkingSayUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking say -body JSON

Set a text to be read out to the caller.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking say --body '{
      "playBeep": true,
      "voice": "woman"
   }'
`, os.Args[0])
}

func africastalkingPlayUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking play -body JSON

Play back an audio file located anywhere on the web.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking play --body '{
      "url": "Ea fuga repellendus asperiores iusto nulla repudiandae."
   }'
`, os.Args[0])
}

func africastalkingGetDigitsUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking get-digits -body JSON

Get digits a user enters on their phone in response to a prompt from application
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking get-digits --body '{
      "callbackUrl": "Qui facere.",
      "finishOnKey": "Voluptatum est sunt labore error voluptate.",
      "numDigits": "Est consequatur delectus dolore architecto ratione.",
      "timeout": "Nulla neque."
   }'
`, os.Args[0])
}

func africastalkingDialUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking dial -body JSON

Connect the user who called your phone number to an external phone number.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking dial --body '{
      "callerId": "Eaque nostrum cum.",
      "maxDuration": "Ducimus eligendi.",
      "phoneNumbers": "Ut ipsum eum.",
      "record": "Molestiae enim laudantium iure veniam qui.",
      "ringBackTone": "Nisi amet et at.",
      "sequential": "Vero consequatur aliquid."
   }'
`, os.Args[0])
}

func africastalkingRecordUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking record -body JSON

Record a call session into an mp3 file.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking record --body '{
      "callbackUrl": "Mollitia et omnis ratione.",
      "finishOnKey": "Quasi animi omnis.",
      "maxLength": "Odit pariatur.",
      "playBeep": "Voluptatibus facilis similique labore quo.",
      "timeout": "Repellendus atque.",
      "trimSilence": "Quis pariatur similique tenetur temporibus qui magnam."
   }'
`, os.Args[0])
}

func africastalkingEnqueueUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking enqueue -body JSON

Pass an incoming call to a queue to be handled later.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking enqueue --body '{
      "holdMusic": "Perferendis libero sed sunt ea et.",
      "name": "Nobis doloribus repudiandae ad inventore quam."
   }'
`, os.Args[0])
}

func africastalkingDequeueUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking dequeue -body JSON

Pass the calls enqueued to a separate number to be handled.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking dequeue --body '{
      "name": "Rerum corporis ducimus reiciendis cumque.",
      "phoneNumber": "Beatae soluta numquam ipsum."
   }'
`, os.Args[0])
}

func africastalkingRedirectUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking redirect -body JSON

Transfer control of the call to the script whose URL is passed in.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking redirect --body '{
      "Reject": "Voluptatem earum quo."
   }'
`, os.Args[0])
}

func africastalkingRejectUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking reject -body JSON

Reject an incoming call without incurring any usage charges.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking reject --body '{
      "Redirect": "Consequuntur fugiat eveniet quasi consequatur quia."
   }'
`, os.Args[0])
}

func africastalkingQueueUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking queue -body JSON

Used when you have more calls than you can handle at one time
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking queue --body '{
      "phoneNumbers": "Voluptatum dicta saepe voluptatibus.",
      "username": "Quae voluptatem dolor ut iure et."
   }'
`, os.Args[0])
}

func africastalkingUploadMediaUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking upload-media -body JSON

Uploads media or audio files to Africa'sTalking servers with the extension .mp3 or .wav
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking upload-media --body '{
      "url": "Assumenda a qui voluptatem.",
      "username": "Voluptatem dolore non sequi odio."
   }'
`, os.Args[0])
}

func africastalkingMobileCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-checkout -body JSON

Initiate Mobile C2B payments on a mobile subscriber’s device.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-checkout --body '{
      "amount": "Sint possimus vel.",
      "currencyCode": "KES",
      "metadata": {
         "Aut impedit ut in aut.": "Possimus atque consequuntur ex enim.",
         "Ea quo assumenda et aut molestiae.": "Laboriosam aliquam aut neque."
      },
      "phoneNumber": "Sed quibusdam molestiae ea.",
      "productName": "Ullam rerum.",
      "providerChannel": "Esse veniam quod sunt facere.",
      "username": "Voluptas voluptas doloremque distinctio fugit."
   }'
`, os.Args[0])
}

func africastalkingMobileB2CUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-b2-c -body JSON

Initiate Mobile B2C request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-b2-c --body '{
      "productName": "Cum eum omnis assumenda.",
      "recipients": [
         {
            "amount": "Omnis eos nulla eius atque quaerat.",
            "currencyCode": "Voluptatum voluptas illo accusamus earum.",
            "metadata": {
               "Eum rerum nihil itaque molestiae nihil.": "Repellendus ea minus.",
               "Itaque sunt dolor quisquam voluptatem et fuga.": "Exercitationem quis repellendus non necessitatibus."
            },
            "name": "Sint dignissimos enim quod hic fugit beatae.",
            "phoneNumber": "Quod et numquam soluta odit eum.",
            "providerChannel": "Ut asperiores et perspiciatis.",
            "reason": "BusinessPayment"
         },
         {
            "amount": "Omnis eos nulla eius atque quaerat.",
            "currencyCode": "Voluptatum voluptas illo accusamus earum.",
            "metadata": {
               "Eum rerum nihil itaque molestiae nihil.": "Repellendus ea minus.",
               "Itaque sunt dolor quisquam voluptatem et fuga.": "Exercitationem quis repellendus non necessitatibus."
            },
            "name": "Sint dignissimos enim quod hic fugit beatae.",
            "phoneNumber": "Quod et numquam soluta odit eum.",
            "providerChannel": "Ut asperiores et perspiciatis.",
            "reason": "BusinessPayment"
         }
      ],
      "username": "Sunt in."
   }'
`, os.Args[0])
}

func africastalkingMobileB2BUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-b2-b -body JSON

Initiate Mobile B2B request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-b2-b --body '{
      "amount": "Ducimus odio placeat placeat ipsa.",
      "currencyCode": "KES",
      "destinationAccount": "Tempora vel.",
      "destinationChannel": "Et nihil earum sequi accusantium.",
      "metadata": "Quam consequatur.",
      "productName": "Architecto atque alias ad et excepturi.",
      "provider": "TigoTanzania",
      "transferType": "BusinessPayBill",
      "username": "Delectus voluptatem est in voluptas."
   }'
`, os.Args[0])
}

func africastalkingBankCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank- -checkout -body JSON

Collect money into your payment wallet.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank- -checkout --body '{
      "amount": 0.5230229290853498,
      "bankAccount": {
         "accountName": "Sequi temporibus.",
         "accountNumber": "Eum quibusdam maxime dolorum ad sit.",
         "bankCode": 8697003489270813697,
         "dateOfBirth": "2010-03-27"
      },
      "currencyCode": "KES",
      "metadata": {
         "Iste aut molestiae quis cupiditate doloribus et.": "Incidunt neque minus repellat non."
      },
      "narration": "Debitis ex nihil impedit atque eum eaque.",
      "productName": "Illo harum quo voluptas magni iste.",
      "username": "Corrupti consequuntur dolor corporis."
   }'
`, os.Args[0])
}

func africastalkingBankCheckoutValidateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank-checkout-validate -body JSON

Validate a bank checkout charge request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank-checkout-validate --body '{
      "otp": "Sint sint nobis repellat et voluptatem.",
      "transactionId": "Quisquam in tempora sequi.",
      "username": "Voluptates dolor quos."
   }'
`, os.Args[0])
}

func africastalkingBankTransferUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank-transfer -body JSON

Initiate a bank transfer request.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank-transfer --body '{
      "productName": "Molestiae est.",
      "recipients": [
         {
            "accountName": "Unde ea.",
            "accountNumber": "Incidunt maxime libero sint.",
            "amount": "Possimus vel.",
            "bankAccount": "Dicta consequuntur.",
            "bankCode": "Totam non iure officiis.",
            "currencyCode": "Inventore consectetur mollitia eum.",
            "dateOfBirth": "Et aut.",
            "metadata": {
               "Quidem eaque debitis nam voluptas est ducimus.": "Nisi sint eum et id repudiandae."
            },
            "narration": "Quos et veniam."
         },
         {
            "accountName": "Unde ea.",
            "accountNumber": "Incidunt maxime libero sint.",
            "amount": "Possimus vel.",
            "bankAccount": "Dicta consequuntur.",
            "bankCode": "Totam non iure officiis.",
            "currencyCode": "Inventore consectetur mollitia eum.",
            "dateOfBirth": "Et aut.",
            "metadata": {
               "Quidem eaque debitis nam voluptas est ducimus.": "Nisi sint eum et id repudiandae."
            },
            "narration": "Quos et veniam."
         },
         {
            "accountName": "Unde ea.",
            "accountNumber": "Incidunt maxime libero sint.",
            "amount": "Possimus vel.",
            "bankAccount": "Dicta consequuntur.",
            "bankCode": "Totam non iure officiis.",
            "currencyCode": "Inventore consectetur mollitia eum.",
            "dateOfBirth": "Et aut.",
            "metadata": {
               "Quidem eaque debitis nam voluptas est ducimus.": "Nisi sint eum et id repudiandae."
            },
            "narration": "Quos et veniam."
         }
      ],
      "username": "Ut perferendis sunt ipsam earum."
   }'
`, os.Args[0])
}

func africastalkingCardCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking card-checkout -body JSON

Collect money into your Payment Wallet
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking card-checkout --body '{
      "amount": 0.3079408639331346,
      "checkoutToken": "Nam ad adipisci voluptates ut.",
      "currencyCode": "KES",
      "metadata": {
         "Ad voluptatem veritatis porro quo est deleniti.": "Quia quas dolorum distinctio."
      },
      "narration": "Debitis numquam et tempore non iste.",
      "paymentCard": {
         "authToken": "Doloribus fugiat eos distinctio.",
         "countryCode": "NG",
         "cvvNumber": 7038034840975459000,
         "expiryMonth": 8002608393396165428,
         "expiryYear": 5166870202654348333,
         "number": "Sint consequatur quis praesentium sapiente."
      },
      "productName": "Sint aut accusantium voluptate doloribus.",
      "username": "Hic aut eaque qui quo."
   }'
`, os.Args[0])
}

func africastalkingCardCheckoutValidateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking card-checkout-validate -body JSON

Validate card checkout charge requests
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking card-checkout-validate --body '{
      "otp": "Necessitatibus nihil repellat.",
      "transactionId": "Alias ullam doloribus qui fugiat natus dolor.",
      "username": "Voluptatem atque modi."
   }'
`, os.Args[0])
}

func africastalkingWalletTransferUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking wallet-transfer -body JSON

Transfer money from one product to another.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking wallet-transfer --body '{
      "amount": 0.7660151954115325,
      "currencyCode": "Harum impedit sunt omnis rerum autem suscipit.",
      "metadata": {
         "Aut enim deserunt accusamus consequuntur rem.": "Laudantium aut magnam tenetur."
      },
      "productName": "Numquam vitae nam sed.",
      "targetProductCode": "Inventore ea vel est consequatur.",
      "username": "Et quis voluptas enim consequatur placeat."
   }'
`, os.Args[0])
}

func africastalkingTopupStashUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking topup-stash -body JSON

Move money from a Payment Product to an application stash.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking topup-stash --body '{
      "amount": 0.510901788493485,
      "currencyCode": "Corrupti esse quo non esse quia enim.",
      "metadata": {
         "Nihil minima et labore voluptatem perspiciatis.": "Exercitationem ratione."
      },
      "productName": "Provident sint rerum eum sed eius aut.",
      "username": "Similique qui facere minima."
   }'
`, os.Args[0])
}

func africastalkingSendAirtimeUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-airtime -body JSON

Send Airtime.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-airtime --body '{
      "recipients": [
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         },
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         }
      ],
      "username": "Eum laudantium odit praesentium voluptas dignissimos eius."
   }'
`, os.Args[0])
}

func africastalkingPublishIoTUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking publish-io-t -body JSON

Publishes messages to remote devices.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking publish-io-t --body '{
      "deviceGroup": "Fuga pariatur voluptates.",
      "payload": "Maiores eos quisquam quis nisi neque.",
      "topic": "\u003cusername\u003e/\u003cdevice-group\u003e/\u003cthe-topic\u003e",
      "username": "Repellat explicabo similique."
   }'
`, os.Args[0])
}

func africastalkingInitiateAppDataUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking initiate-app-data -p STRING

Initiate an application data request.
    -p STRING: string is the payload type of the africastalking service InitiateAppData method.

Example:
    `+os.Args[0]+` africastalking initiate-app-data --p "Quis dolorum iure ut perferendis quidem facilis."
`, os.Args[0])
}

func africastalkingGenerateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking generate -body JSON

Generates a valid auth token
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking generate --body '{
      "apiKey": "Quia omnis sed.",
      "username": "sandbox"
   }'
`, os.Args[0])
}
