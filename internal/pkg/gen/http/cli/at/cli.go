// Code generated by goa v3.1.3, DO NOT EDIT.
//
// at HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/at-go/internal/design -o internal/pkg

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	"github.com/go-kit/kit/endpoint"
	africastalkingc "github.com/wondenge/at-go/internal/pkg/gen/http/africastalking/client"
	goahttp "goa.design/goa/v3/http"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `africastalking (send-bulk-sms|send-premium-sms|fetch-sms|new-checkout-token|new-premium-subscription|fetch-premium-subscription|purge-premium-subscription|make-call|transfer-call|upload-media|mobile-checkout|mobile-b2-c|mobile-b2-b|bank- -checkout|bank-checkout-validate|bank-transfer|card-checkout|card-checkout-validate|wallet-transfer|topup-stash|find-transaction|fetch-product-transactions|fetch-wallet-transactions|fetch-wallet-balance|send-airtime|publish-io-t|initiate-app-data|generate)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` africastalking send-bulk-sms --body '{
      "bulkSMSMode": 8384610134235997494,
      "enqueue": 0,
      "from": "Quis et vero odit.",
      "keyword": "Ea unde nisi et.",
      "linkId": "Sint est itaque.",
      "message": "Asperiores qui est est dolorem repellendus.",
      "retryDurationInHours": "Quis atque et est.",
      "to": "Odit voluptatem totam reiciendis recusandae est.",
      "username": "Itaque porro ipsa saepe molestias inventore."
   }'` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (endpoint.Endpoint, interface{}, error) {
	var (
		africastalkingFlags = flag.NewFlagSet("africastalking", flag.ContinueOnError)

		africastalkingSendBulkSMSFlags    = flag.NewFlagSet("send-bulk-sms", flag.ExitOnError)
		africastalkingSendBulkSMSBodyFlag = africastalkingSendBulkSMSFlags.String("body", "REQUIRED", "")

		africastalkingSendPremiumSMSFlags    = flag.NewFlagSet("send-premium-sms", flag.ExitOnError)
		africastalkingSendPremiumSMSBodyFlag = africastalkingSendPremiumSMSFlags.String("body", "REQUIRED", "")

		africastalkingFetchSMSFlags    = flag.NewFlagSet("fetch-sms", flag.ExitOnError)
		africastalkingFetchSMSBodyFlag = africastalkingFetchSMSFlags.String("body", "REQUIRED", "")

		africastalkingNewCheckoutTokenFlags    = flag.NewFlagSet("new-checkout-token", flag.ExitOnError)
		africastalkingNewCheckoutTokenBodyFlag = africastalkingNewCheckoutTokenFlags.String("body", "REQUIRED", "")

		africastalkingNewPremiumSubscriptionFlags    = flag.NewFlagSet("new-premium-subscription", flag.ExitOnError)
		africastalkingNewPremiumSubscriptionBodyFlag = africastalkingNewPremiumSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingFetchPremiumSubscriptionFlags    = flag.NewFlagSet("fetch-premium-subscription", flag.ExitOnError)
		africastalkingFetchPremiumSubscriptionBodyFlag = africastalkingFetchPremiumSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingPurgePremiumSubscriptionFlags    = flag.NewFlagSet("purge-premium-subscription", flag.ExitOnError)
		africastalkingPurgePremiumSubscriptionBodyFlag = africastalkingPurgePremiumSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingMakeCallFlags    = flag.NewFlagSet("make-call", flag.ExitOnError)
		africastalkingMakeCallBodyFlag = africastalkingMakeCallFlags.String("body", "REQUIRED", "")

		africastalkingTransferCallFlags    = flag.NewFlagSet("transfer-call", flag.ExitOnError)
		africastalkingTransferCallBodyFlag = africastalkingTransferCallFlags.String("body", "REQUIRED", "")

		africastalkingUploadMediaFlags    = flag.NewFlagSet("upload-media", flag.ExitOnError)
		africastalkingUploadMediaBodyFlag = africastalkingUploadMediaFlags.String("body", "REQUIRED", "")

		africastalkingMobileCheckoutFlags    = flag.NewFlagSet("mobile-checkout", flag.ExitOnError)
		africastalkingMobileCheckoutBodyFlag = africastalkingMobileCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingMobileB2CFlags    = flag.NewFlagSet("mobile-b2-c", flag.ExitOnError)
		africastalkingMobileB2CBodyFlag = africastalkingMobileB2CFlags.String("body", "REQUIRED", "")

		africastalkingMobileB2BFlags    = flag.NewFlagSet("mobile-b2-b", flag.ExitOnError)
		africastalkingMobileB2BBodyFlag = africastalkingMobileB2BFlags.String("body", "REQUIRED", "")

		africastalkingBankCheckoutFlags    = flag.NewFlagSet("bank- -checkout", flag.ExitOnError)
		africastalkingBankCheckoutBodyFlag = africastalkingBankCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingBankCheckoutValidateFlags    = flag.NewFlagSet("bank-checkout-validate", flag.ExitOnError)
		africastalkingBankCheckoutValidateBodyFlag = africastalkingBankCheckoutValidateFlags.String("body", "REQUIRED", "")

		africastalkingBankTransferFlags    = flag.NewFlagSet("bank-transfer", flag.ExitOnError)
		africastalkingBankTransferBodyFlag = africastalkingBankTransferFlags.String("body", "REQUIRED", "")

		africastalkingCardCheckoutFlags    = flag.NewFlagSet("card-checkout", flag.ExitOnError)
		africastalkingCardCheckoutBodyFlag = africastalkingCardCheckoutFlags.String("body", "REQUIRED", "")

		africastalkingCardCheckoutValidateFlags    = flag.NewFlagSet("card-checkout-validate", flag.ExitOnError)
		africastalkingCardCheckoutValidateBodyFlag = africastalkingCardCheckoutValidateFlags.String("body", "REQUIRED", "")

		africastalkingWalletTransferFlags    = flag.NewFlagSet("wallet-transfer", flag.ExitOnError)
		africastalkingWalletTransferBodyFlag = africastalkingWalletTransferFlags.String("body", "REQUIRED", "")

		africastalkingTopupStashFlags    = flag.NewFlagSet("topup-stash", flag.ExitOnError)
		africastalkingTopupStashBodyFlag = africastalkingTopupStashFlags.String("body", "REQUIRED", "")

		africastalkingFindTransactionFlags    = flag.NewFlagSet("find-transaction", flag.ExitOnError)
		africastalkingFindTransactionBodyFlag = africastalkingFindTransactionFlags.String("body", "REQUIRED", "")

		africastalkingFetchProductTransactionsFlags    = flag.NewFlagSet("fetch-product-transactions", flag.ExitOnError)
		africastalkingFetchProductTransactionsBodyFlag = africastalkingFetchProductTransactionsFlags.String("body", "REQUIRED", "")

		africastalkingFetchWalletTransactionsFlags    = flag.NewFlagSet("fetch-wallet-transactions", flag.ExitOnError)
		africastalkingFetchWalletTransactionsBodyFlag = africastalkingFetchWalletTransactionsFlags.String("body", "REQUIRED", "")

		africastalkingFetchWalletBalanceFlags    = flag.NewFlagSet("fetch-wallet-balance", flag.ExitOnError)
		africastalkingFetchWalletBalanceBodyFlag = africastalkingFetchWalletBalanceFlags.String("body", "REQUIRED", "")

		africastalkingSendAirtimeFlags    = flag.NewFlagSet("send-airtime", flag.ExitOnError)
		africastalkingSendAirtimeBodyFlag = africastalkingSendAirtimeFlags.String("body", "REQUIRED", "")

		africastalkingPublishIoTFlags    = flag.NewFlagSet("publish-io-t", flag.ExitOnError)
		africastalkingPublishIoTBodyFlag = africastalkingPublishIoTFlags.String("body", "REQUIRED", "")

		africastalkingInitiateAppDataFlags = flag.NewFlagSet("initiate-app-data", flag.ExitOnError)
		africastalkingInitiateAppDataPFlag = africastalkingInitiateAppDataFlags.String("p", "REQUIRED", "string is the payload type of the africastalking service InitiateAppData method.")

		africastalkingGenerateFlags    = flag.NewFlagSet("generate", flag.ExitOnError)
		africastalkingGenerateBodyFlag = africastalkingGenerateFlags.String("body", "REQUIRED", "")
	)
	africastalkingFlags.Usage = africastalkingUsage
	africastalkingSendBulkSMSFlags.Usage = africastalkingSendBulkSMSUsage
	africastalkingSendPremiumSMSFlags.Usage = africastalkingSendPremiumSMSUsage
	africastalkingFetchSMSFlags.Usage = africastalkingFetchSMSUsage
	africastalkingNewCheckoutTokenFlags.Usage = africastalkingNewCheckoutTokenUsage
	africastalkingNewPremiumSubscriptionFlags.Usage = africastalkingNewPremiumSubscriptionUsage
	africastalkingFetchPremiumSubscriptionFlags.Usage = africastalkingFetchPremiumSubscriptionUsage
	africastalkingPurgePremiumSubscriptionFlags.Usage = africastalkingPurgePremiumSubscriptionUsage
	africastalkingMakeCallFlags.Usage = africastalkingMakeCallUsage
	africastalkingTransferCallFlags.Usage = africastalkingTransferCallUsage
	africastalkingUploadMediaFlags.Usage = africastalkingUploadMediaUsage
	africastalkingMobileCheckoutFlags.Usage = africastalkingMobileCheckoutUsage
	africastalkingMobileB2CFlags.Usage = africastalkingMobileB2CUsage
	africastalkingMobileB2BFlags.Usage = africastalkingMobileB2BUsage
	africastalkingBankCheckoutFlags.Usage = africastalkingBankCheckoutUsage
	africastalkingBankCheckoutValidateFlags.Usage = africastalkingBankCheckoutValidateUsage
	africastalkingBankTransferFlags.Usage = africastalkingBankTransferUsage
	africastalkingCardCheckoutFlags.Usage = africastalkingCardCheckoutUsage
	africastalkingCardCheckoutValidateFlags.Usage = africastalkingCardCheckoutValidateUsage
	africastalkingWalletTransferFlags.Usage = africastalkingWalletTransferUsage
	africastalkingTopupStashFlags.Usage = africastalkingTopupStashUsage
	africastalkingFindTransactionFlags.Usage = africastalkingFindTransactionUsage
	africastalkingFetchProductTransactionsFlags.Usage = africastalkingFetchProductTransactionsUsage
	africastalkingFetchWalletTransactionsFlags.Usage = africastalkingFetchWalletTransactionsUsage
	africastalkingFetchWalletBalanceFlags.Usage = africastalkingFetchWalletBalanceUsage
	africastalkingSendAirtimeFlags.Usage = africastalkingSendAirtimeUsage
	africastalkingPublishIoTFlags.Usage = africastalkingPublishIoTUsage
	africastalkingInitiateAppDataFlags.Usage = africastalkingInitiateAppDataUsage
	africastalkingGenerateFlags.Usage = africastalkingGenerateUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "africastalking":
			svcf = africastalkingFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "africastalking":
			switch epn {
			case "send-bulk-sms":
				epf = africastalkingSendBulkSMSFlags

			case "send-premium-sms":
				epf = africastalkingSendPremiumSMSFlags

			case "fetch-sms":
				epf = africastalkingFetchSMSFlags

			case "new-checkout-token":
				epf = africastalkingNewCheckoutTokenFlags

			case "new-premium-subscription":
				epf = africastalkingNewPremiumSubscriptionFlags

			case "fetch-premium-subscription":
				epf = africastalkingFetchPremiumSubscriptionFlags

			case "purge-premium-subscription":
				epf = africastalkingPurgePremiumSubscriptionFlags

			case "make-call":
				epf = africastalkingMakeCallFlags

			case "transfer-call":
				epf = africastalkingTransferCallFlags

			case "upload-media":
				epf = africastalkingUploadMediaFlags

			case "mobile-checkout":
				epf = africastalkingMobileCheckoutFlags

			case "mobile-b2-c":
				epf = africastalkingMobileB2CFlags

			case "mobile-b2-b":
				epf = africastalkingMobileB2BFlags

			case "bank- -checkout":
				epf = africastalkingBankCheckoutFlags

			case "bank-checkout-validate":
				epf = africastalkingBankCheckoutValidateFlags

			case "bank-transfer":
				epf = africastalkingBankTransferFlags

			case "card-checkout":
				epf = africastalkingCardCheckoutFlags

			case "card-checkout-validate":
				epf = africastalkingCardCheckoutValidateFlags

			case "wallet-transfer":
				epf = africastalkingWalletTransferFlags

			case "topup-stash":
				epf = africastalkingTopupStashFlags

			case "find-transaction":
				epf = africastalkingFindTransactionFlags

			case "fetch-product-transactions":
				epf = africastalkingFetchProductTransactionsFlags

			case "fetch-wallet-transactions":
				epf = africastalkingFetchWalletTransactionsFlags

			case "fetch-wallet-balance":
				epf = africastalkingFetchWalletBalanceFlags

			case "send-airtime":
				epf = africastalkingSendAirtimeFlags

			case "publish-io-t":
				epf = africastalkingPublishIoTFlags

			case "initiate-app-data":
				epf = africastalkingInitiateAppDataFlags

			case "generate":
				epf = africastalkingGenerateFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint endpoint.Endpoint
		err      error
	)
	{
		switch svcn {
		case "africastalking":
			c := africastalkingc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "send-bulk-sms":
				endpoint = c.SendBulkSMS()
				data, err = africastalkingc.BuildSendBulkSMSPayload(*africastalkingSendBulkSMSBodyFlag)
			case "send-premium-sms":
				endpoint = c.SendPremiumSMS()
				data, err = africastalkingc.BuildSendPremiumSMSPayload(*africastalkingSendPremiumSMSBodyFlag)
			case "fetch-sms":
				endpoint = c.FetchSMS()
				data, err = africastalkingc.BuildFetchSMSPayload(*africastalkingFetchSMSBodyFlag)
			case "new-checkout-token":
				endpoint = c.NewCheckoutToken()
				data, err = africastalkingc.BuildNewCheckoutTokenPayload(*africastalkingNewCheckoutTokenBodyFlag)
			case "new-premium-subscription":
				endpoint = c.NewPremiumSubscription()
				data, err = africastalkingc.BuildNewPremiumSubscriptionPayload(*africastalkingNewPremiumSubscriptionBodyFlag)
			case "fetch-premium-subscription":
				endpoint = c.FetchPremiumSubscription()
				data, err = africastalkingc.BuildFetchPremiumSubscriptionPayload(*africastalkingFetchPremiumSubscriptionBodyFlag)
			case "purge-premium-subscription":
				endpoint = c.PurgePremiumSubscription()
				data, err = africastalkingc.BuildPurgePremiumSubscriptionPayload(*africastalkingPurgePremiumSubscriptionBodyFlag)
			case "make-call":
				endpoint = c.MakeCall()
				data, err = africastalkingc.BuildMakeCallPayload(*africastalkingMakeCallBodyFlag)
			case "transfer-call":
				endpoint = c.TransferCall()
				data, err = africastalkingc.BuildTransferCallPayload(*africastalkingTransferCallBodyFlag)
			case "upload-media":
				endpoint = c.UploadMedia()
				data, err = africastalkingc.BuildUploadMediaPayload(*africastalkingUploadMediaBodyFlag)
			case "mobile-checkout":
				endpoint = c.MobileCheckout()
				data, err = africastalkingc.BuildMobileCheckoutPayload(*africastalkingMobileCheckoutBodyFlag)
			case "mobile-b2-c":
				endpoint = c.MobileB2C()
				data, err = africastalkingc.BuildMobileB2CPayload(*africastalkingMobileB2CBodyFlag)
			case "mobile-b2-b":
				endpoint = c.MobileB2B()
				data, err = africastalkingc.BuildMobileB2BPayload(*africastalkingMobileB2BBodyFlag)
			case "bank- -checkout":
				endpoint = c.BankCheckout()
				data, err = africastalkingc.BuildBankCheckoutPayload(*africastalkingBankCheckoutBodyFlag)
			case "bank-checkout-validate":
				endpoint = c.BankCheckoutValidate()
				data, err = africastalkingc.BuildBankCheckoutValidatePayload(*africastalkingBankCheckoutValidateBodyFlag)
			case "bank-transfer":
				endpoint = c.BankTransfer()
				data, err = africastalkingc.BuildBankTransferPayload(*africastalkingBankTransferBodyFlag)
			case "card-checkout":
				endpoint = c.CardCheckout()
				data, err = africastalkingc.BuildCardCheckoutPayload(*africastalkingCardCheckoutBodyFlag)
			case "card-checkout-validate":
				endpoint = c.CardCheckoutValidate()
				data, err = africastalkingc.BuildCardCheckoutValidatePayload(*africastalkingCardCheckoutValidateBodyFlag)
			case "wallet-transfer":
				endpoint = c.WalletTransfer()
				data, err = africastalkingc.BuildWalletTransferPayload(*africastalkingWalletTransferBodyFlag)
			case "topup-stash":
				endpoint = c.TopupStash()
				data, err = africastalkingc.BuildTopupStashPayload(*africastalkingTopupStashBodyFlag)
			case "find-transaction":
				endpoint = c.FindTransaction()
				data, err = africastalkingc.BuildFindTransactionPayload(*africastalkingFindTransactionBodyFlag)
			case "fetch-product-transactions":
				endpoint = c.FetchProductTransactions()
				data, err = africastalkingc.BuildFetchProductTransactionsPayload(*africastalkingFetchProductTransactionsBodyFlag)
			case "fetch-wallet-transactions":
				endpoint = c.FetchWalletTransactions()
				data, err = africastalkingc.BuildFetchWalletTransactionsPayload(*africastalkingFetchWalletTransactionsBodyFlag)
			case "fetch-wallet-balance":
				endpoint = c.FetchWalletBalance()
				data, err = africastalkingc.BuildFetchWalletBalancePayload(*africastalkingFetchWalletBalanceBodyFlag)
			case "send-airtime":
				endpoint = c.SendAirtime()
				data, err = africastalkingc.BuildSendAirtimePayload(*africastalkingSendAirtimeBodyFlag)
			case "publish-io-t":
				endpoint = c.PublishIoT()
				data, err = africastalkingc.BuildPublishIoTPayload(*africastalkingPublishIoTBodyFlag)
			case "initiate-app-data":
				endpoint = c.InitiateAppData()
				data = *africastalkingInitiateAppDataPFlag
			case "generate":
				endpoint = c.Generate()
				data, err = africastalkingc.BuildGeneratePayload(*africastalkingGenerateBodyFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// africastalkingUsage displays the usage of the africastalking command and its
// subcommands.
func africastalkingUsage() {
	fmt.Fprintf(os.Stderr, `Service is the africastalking service interface.
Usage:
    %s [globalflags] africastalking COMMAND [flags]

COMMAND:
    send-bulk-sms: Send Bulk SMS
    send-premium-sms: Send Premium SMS
    fetch-sms: Incrementally fetch messages from application inbox.
    new-checkout-token: Generate a checkout token
    new-premium-subscription: Subscribe a phone number
    fetch-premium-subscription: Incrementally fetch your premium sms subscriptions.
    purge-premium-subscription: Delete a Premium SMS Subscription
    make-call: Makes outbound calls.
    transfer-call: Transfers call to another number.
    upload-media: Uploads media or audio files to Africa'sTalking servers with the extension .mp3 or .wav
    mobile-checkout: Initiate Mobile C2B payments on a mobile subscriber’s device.
    mobile-b2-c: Initiate Mobile B2C request
    mobile-b2-b: Initiate Mobile B2B request
    bank- -checkout: Collect money into your payment wallet.
    bank-checkout-validate: Validate a bank checkout charge request
    bank-transfer: Initiate a bank transfer request.
    card-checkout: Collect money into your Payment Wallet by initiating transactions that deduct money from a customers Debit or Credit Card.
    card-checkout-validate: Validate card checkout charge requests
    wallet-transfer: Transfer money from one Payment Product to another Payment Product hosted on Africa’s Talking.
    topup-stash: Move money from a Payment Product to an Africa’s Talking application stash.
    find-transaction: Fetch transactions of a particular payment product.
    fetch-product-transactions: Fetch transactions of a particular payment product.
    fetch-wallet-transactions: Fetch your wallet transactions
    fetch-wallet-balance: Fetch your wallet balance
    send-airtime: Send Airtime.
    publish-io-t: Publishes messages to remote devices.
    initiate-app-data: Initiate an application data request.
    generate: Generates a valid auth token

Additional help:
    %s africastalking COMMAND --help
`, os.Args[0], os.Args[0])
}
func africastalkingSendBulkSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-bulk-sms -body JSON

Send Bulk SMS
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-bulk-sms --body '{
      "bulkSMSMode": 8384610134235997494,
      "enqueue": 0,
      "from": "Quis et vero odit.",
      "keyword": "Ea unde nisi et.",
      "linkId": "Sint est itaque.",
      "message": "Asperiores qui est est dolorem repellendus.",
      "retryDurationInHours": "Quis atque et est.",
      "to": "Odit voluptatem totam reiciendis recusandae est.",
      "username": "Itaque porro ipsa saepe molestias inventore."
   }'
`, os.Args[0])
}

func africastalkingSendPremiumSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-premium-sms -body JSON

Send Premium SMS
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-premium-sms --body '{
      "bulkSMSMode": 2952784659881196971,
      "enqueue": 1,
      "from": "Odio dolor architecto hic non vel eos.",
      "keyword": "Voluptatem et magni.",
      "linkId": "Aliquid reiciendis est iusto non ut deserunt.",
      "message": "Eos ratione quisquam reiciendis.",
      "retryDurationInHours": "Quasi nostrum id libero consequuntur velit ut.",
      "to": "Omnis aut magni est inventore excepturi harum.",
      "username": "Maxime rem."
   }'
`, os.Args[0])
}

func africastalkingFetchSMSUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-sms -body JSON

Incrementally fetch messages from application inbox.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking fetch-sms --body '{
      "lastReceivedId": "Nobis velit ea.",
      "username": "Mollitia esse id similique."
   }'
`, os.Args[0])
}

func africastalkingNewCheckoutTokenUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking new-checkout-token -body JSON

Generate a checkout token
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking new-checkout-token --body '{
      "phoneNumber": "Est est omnis ab placeat sint."
   }'
`, os.Args[0])
}

func africastalkingNewPremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking new-premium-subscription -body JSON

Subscribe a phone number
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking new-premium-subscription --body '{
      "checkoutToken": "",
      "keyword": "",
      "phoneNumber": "",
      "shortCode": "",
      "username": "Sed eveniet aut non."
   }'
`, os.Args[0])
}

func africastalkingFetchPremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-premium-subscription -body JSON

Incrementally fetch your premium sms subscriptions.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking fetch-premium-subscription --body '{
      "keyword": "",
      "lastReceivedId": "Alias vero eligendi.",
      "shortCode": "",
      "username": "Ipsa veritatis eveniet sapiente velit quia."
   }'
`, os.Args[0])
}

func africastalkingPurgePremiumSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking purge-premium-subscription -body JSON

Delete a Premium SMS Subscription
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking purge-premium-subscription --body '{
      "keyword": "",
      "phoneNumber": "",
      "shortCode": "",
      "username": "Quia voluptatem aperiam et et illo."
   }'
`, os.Args[0])
}

func africastalkingMakeCallUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking make-call -body JSON

Makes outbound calls.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking make-call --body '{
      "clientRequestId": "Blanditiis impedit minima.",
      "from": "Et aut.",
      "to": "Et et non quos.",
      "username": "Quis numquam deserunt."
   }'
`, os.Args[0])
}

func africastalkingTransferCallUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking transfer-call -body JSON

Transfers call to another number.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking transfer-call --body '{
      "callLeg": "caller",
      "holdMusicUrl": "Eius sed.",
      "phoneNumber": "Quidem voluptas commodi et consequatur ut.",
      "sessionId": "Voluptates labore."
   }'
`, os.Args[0])
}

func africastalkingUploadMediaUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking upload-media -body JSON

Uploads media or audio files to Africa'sTalking servers with the extension .mp3 or .wav
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking upload-media --body '{
      "url": "Vel ut ut assumenda quaerat.",
      "username": "Et non rem."
   }'
`, os.Args[0])
}

func africastalkingMobileCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-checkout -body JSON

Initiate Mobile C2B payments on a mobile subscriber’s device.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-checkout --body '{
      "amount": 3000,
      "currencyCode": "KES",
      "metadata": {
         "Fuga qui repellat quidem.": "Quis distinctio quis et ex.",
         "Nulla est inventore consequatur ut quo.": "Omnis maxime provident nihil quidem.",
         "Soluta et ipsa.": "Rerum porro."
      },
      "phoneNumber": "+254711XXXYYY",
      "productName": "myProductName",
      "providerChannel": "myProviderChannel",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingMobileB2CUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-b2-c -body JSON

Initiate Mobile B2C request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-b2-c --body '{
      "productName": "myProductName",
      "recipients": [
         {
            "amount": 100.5,
            "currencyCode": "KES",
            "metadata": {
               "OqkdMh": "RwMfHN",
               "QawIGK": "mr"
            },
            "name": "name",
            "phoneNumber": "+254711XXXYYY",
            "providerChannel": "myProviderChannel",
            "reason": "SalaryPayment"
         },
         {
            "amount": 100.5,
            "currencyCode": "KES",
            "metadata": {
               "OqkdMh": "RwMfHN",
               "QawIGK": "mr"
            },
            "name": "name",
            "phoneNumber": "+254711XXXYYY",
            "providerChannel": "myProviderChannel",
            "reason": "SalaryPayment"
         },
         {
            "amount": 100.5,
            "currencyCode": "KES",
            "metadata": {
               "OqkdMh": "RwMfHN",
               "QawIGK": "mr"
            },
            "name": "name",
            "phoneNumber": "+254711XXXYYY",
            "providerChannel": "myProviderChannel",
            "reason": "SalaryPayment"
         }
      ],
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingMobileB2BUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking mobile-b2-b -body JSON

Initiate Mobile B2B request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking mobile-b2-b --body '{
      "amount": 3000,
      "currencyCode": "KES",
      "destinationAccount": "Account Name",
      "destinationChannel": "Buy Goods Number",
      "metadata": {
         "FwOA": "EbHFN",
         "lB": "ExdMn",
         "wSLs": "RF"
      },
      "productName": "myProductName",
      "provider": "Mpesa",
      "transferType": "BusinessBuyGoods",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingBankCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank- -checkout -body JSON

Collect money into your payment wallet.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank- -checkout --body '{
      "amount": 39393,
      "bankAccount": {
         "accountName": "Test Bank Account",
         "accountNumber": "1234567890",
         "bankCode": 234001,
         "dateOfBirth": "1976-09-20"
      },
      "currencyCode": "NGN",
      "metadata": {
         "NPgWJ": "kdE",
         "UzgPjL": "s"
      },
      "narration": "payment for airtime",
      "productName": "myPaymentProductName",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingBankCheckoutValidateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank-checkout-validate -body JSON

Validate a bank checkout charge request
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank-checkout-validate --body '{
      "otp": "Quia tempora quia voluptatem et voluptatem.",
      "transactionId": "Sed qui dolores nihil.",
      "username": "Iure molestiae eligendi laudantium est."
   }'
`, os.Args[0])
}

func africastalkingBankTransferUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking bank-transfer -body JSON

Initiate a bank transfer request.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking bank-transfer --body '{
      "productName": "Rem tempora quos facere voluptatem ut.",
      "recipients": [
         {
            "accountName": "Dolorum iure ut perferendis quidem facilis velit.",
            "accountNumber": "Qui ut.",
            "amount": "Quia adipisci laudantium similique tenetur.",
            "bankAccount": "Fuga dolorem ea quidem.",
            "bankCode": "Exercitationem sed repellat.",
            "currencyCode": "Dolores nisi consequatur et quibusdam.",
            "dateOfBirth": "Fugit maiores minus.",
            "metadata": {
               "Est qui velit voluptatem.": "Consequatur maiores."
            },
            "narration": "Et alias commodi laudantium vel quibusdam."
         },
         {
            "accountName": "Dolorum iure ut perferendis quidem facilis velit.",
            "accountNumber": "Qui ut.",
            "amount": "Quia adipisci laudantium similique tenetur.",
            "bankAccount": "Fuga dolorem ea quidem.",
            "bankCode": "Exercitationem sed repellat.",
            "currencyCode": "Dolores nisi consequatur et quibusdam.",
            "dateOfBirth": "Fugit maiores minus.",
            "metadata": {
               "Est qui velit voluptatem.": "Consequatur maiores."
            },
            "narration": "Et alias commodi laudantium vel quibusdam."
         },
         {
            "accountName": "Dolorum iure ut perferendis quidem facilis velit.",
            "accountNumber": "Qui ut.",
            "amount": "Quia adipisci laudantium similique tenetur.",
            "bankAccount": "Fuga dolorem ea quidem.",
            "bankCode": "Exercitationem sed repellat.",
            "currencyCode": "Dolores nisi consequatur et quibusdam.",
            "dateOfBirth": "Fugit maiores minus.",
            "metadata": {
               "Est qui velit voluptatem.": "Consequatur maiores."
            },
            "narration": "Et alias commodi laudantium vel quibusdam."
         }
      ],
      "username": "Quia minus modi molestias."
   }'
`, os.Args[0])
}

func africastalkingCardCheckoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking card-checkout -body JSON

Collect money into your Payment Wallet by initiating transactions that deduct money from a customers Debit or Credit Card.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking card-checkout --body '{
      "amount": 10000.5,
      "checkoutToken": "1234",
      "currencyCode": "NGN",
      "metadata": {
         "Foo": "Bar"
      },
      "narration": "Monthly service charge for My Online Store",
      "paymentCard": {
         "authToken": "1234",
         "countryCode": "NG",
         "cvvNumber": 123,
         "expiryMonth": 8,
         "expiryYear": 2019,
         "number": "1234567890"
      },
      "productName": "myProductName",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingCardCheckoutValidateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking card-checkout-validate -body JSON

Validate card checkout charge requests
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking card-checkout-validate --body '{
      "otp": "Molestiae vel.",
      "transactionId": "Eveniet et magnam maxime porro.",
      "username": "Veritatis qui maiores."
   }'
`, os.Args[0])
}

func africastalkingWalletTransferUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking wallet-transfer -body JSON

Transfer money from one Payment Product to another Payment Product hosted on Africa’s Talking.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking wallet-transfer --body '{
      "amount": 2000,
      "currencyCode": "KES",
      "metadata": {
         "Foo": "Bar"
      },
      "productName": "myProductName",
      "targetProductCode": 2373,
      "username": "MyUserName"
   }'
`, os.Args[0])
}

func africastalkingTopupStashUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking topup-stash -body JSON

Move money from a Payment Product to an Africa’s Talking application stash.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking topup-stash --body '{
      "amount": 2000,
      "currencyCode": "KES",
      "metadata": {
         "Foo": "Bar"
      },
      "productName": "myProductName",
      "username": "MyUserName"
   }'
`, os.Args[0])
}

func africastalkingFindTransactionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking find-transaction -body JSON

Fetch transactions of a particular payment product.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking find-transaction --body '{
      "transactionId": "394828XXXV",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingFetchProductTransactionsUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-product-transactions -body JSON

Fetch transactions of a particular payment product.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking fetch-product-transactions --body '{
      "category": "UserStashTopup",
      "count": 740,
      "destination": "BankAccount",
      "endDate": "2015-02-12",
      "pageNumber": 2369339247652617210,
      "productName": "MyProductName",
      "provider": "Athena",
      "providerChannel": "Dolor minima quidem harum dicta unde sit.",
      "source": "phoneNumber",
      "startDate": "1990-01-03",
      "status": "Success",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingFetchWalletTransactionsUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-wallet-transactions -body JSON

Fetch your wallet transactions
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking fetch-wallet-transactions --body '{
      "categories": "MobileCheckout",
      "count": 364,
      "endDate": "1986-04-03",
      "pageNumber": 979655238485343378,
      "startDate": "1990-07-03",
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingFetchWalletBalanceUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking fetch-wallet-balance -body JSON

Fetch your wallet balance
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking fetch-wallet-balance --body '{
      "username": "MyAppUserName"
   }'
`, os.Args[0])
}

func africastalkingSendAirtimeUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking send-airtime -body JSON

Send Airtime.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking send-airtime --body '{
      "recipients": [
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         },
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         },
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         },
         {
            "amount ": "KES 100.50",
            "phoneNumber": "+234811222333"
         }
      ],
      "username": "Enim laudantium iure veniam."
   }'
`, os.Args[0])
}

func africastalkingPublishIoTUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking publish-io-t -body JSON

Publishes messages to remote devices.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking publish-io-t --body '{
      "deviceGroup": "Nisi amet et at.",
      "payload": "Ducimus eligendi.",
      "topic": "\u003cusername\u003e/\u003cdevice-group\u003e/\u003cthe-topic\u003e",
      "username": "Eaque nostrum cum."
   }'
`, os.Args[0])
}

func africastalkingInitiateAppDataUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking initiate-app-data -p STRING

Initiate an application data request.
    -p STRING: string is the payload type of the africastalking service InitiateAppData method.

Example:
    `+os.Args[0]+` africastalking initiate-app-data --p "Iusto necessitatibus dolor et facilis fugiat."
`, os.Args[0])
}

func africastalkingGenerateUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking generate -body JSON

Generates a valid auth token
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking generate --body '{
      "apiKey": "Quasi animi omnis.",
      "username": "sandbox"
   }'
`, os.Args[0])
}
