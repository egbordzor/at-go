// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-go/internal/design -o internal/pkg

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-go/internal/pkg/gen/http/africastalking/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeSendBulkSMSRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking SendBulkSMS requests.
func EncodeSendBulkSMSRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSendBulkSMSRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSendBulkSMSResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking SendBulkSMS responses.
func DecodeSendBulkSMSResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSendBulkSMSResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSendPremiumSMSRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking SendPremiumSMS requests.
func EncodeSendPremiumSMSRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSendPremiumSMSRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSendPremiumSMSResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking SendPremiumSMS responses.
func DecodeSendPremiumSMSResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSendPremiumSMSResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFetchSMSRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking FetchSMS requests.
func EncodeFetchSMSRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFetchSMSRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFetchSMSResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking FetchSMS responses.
func DecodeFetchSMSResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFetchSMSResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeNewCheckoutTokenRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking NewCheckoutToken requests.
func EncodeNewCheckoutTokenRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeNewCheckoutTokenRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeNewCheckoutTokenResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking NewCheckoutToken responses.
func DecodeNewCheckoutTokenResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeNewCheckoutTokenResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeNewPremiumSubscriptionRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking NewPremiumSubscription requests.
func EncodeNewPremiumSubscriptionRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeNewPremiumSubscriptionRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeNewPremiumSubscriptionResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking NewPremiumSubscription responses.
func DecodeNewPremiumSubscriptionResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeNewPremiumSubscriptionResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFetchPremiumSubscriptionRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking FetchPremiumSubscription requests.
func EncodeFetchPremiumSubscriptionRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFetchPremiumSubscriptionRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFetchPremiumSubscriptionResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking FetchPremiumSubscription responses.
func DecodeFetchPremiumSubscriptionResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFetchPremiumSubscriptionResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePurgePremiumSubscriptionRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking PurgePremiumSubscription requests.
func EncodePurgePremiumSubscriptionRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePurgePremiumSubscriptionRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePurgePremiumSubscriptionResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking PurgePremiumSubscription responses.
func DecodePurgePremiumSubscriptionResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePurgePremiumSubscriptionResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeMakeCallRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking MakeCall requests.
func EncodeMakeCallRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeMakeCallRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeMakeCallResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking MakeCall responses.
func DecodeMakeCallResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeMakeCallResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeTransferCallRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking TransferCall requests.
func EncodeTransferCallRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeTransferCallRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeTransferCallResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking TransferCall responses.
func DecodeTransferCallResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeTransferCallResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeQueueRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Queue requests.
func EncodeQueueRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeQueueRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeQueueResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Queue responses.
func DecodeQueueResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeQueueResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeUploadMediaRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking UploadMedia requests.
func EncodeUploadMediaRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeUploadMediaRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeUploadMediaResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking UploadMedia responses.
func DecodeUploadMediaResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeUploadMediaResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSayRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Say requests.
func EncodeSayRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSayRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSayResponse returns a go-kit DecodeResponseFunc suitable for decoding
// africastalking Say responses.
func DecodeSayResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSayResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePlayRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Play requests.
func EncodePlayRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePlayRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePlayResponse returns a go-kit DecodeResponseFunc suitable for decoding
// africastalking Play responses.
func DecodePlayResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePlayResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeGetDigitsRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking GetDigits requests.
func EncodeGetDigitsRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeGetDigitsRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeGetDigitsResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking GetDigits responses.
func DecodeGetDigitsResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeGetDigitsResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeDialRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Dial requests.
func EncodeDialRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeDialRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeDialResponse returns a go-kit DecodeResponseFunc suitable for decoding
// africastalking Dial responses.
func DecodeDialResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeDialResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeRecordRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Record requests.
func EncodeRecordRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeRecordRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeRecordResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Record responses.
func DecodeRecordResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeRecordResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeEnqueueRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking Enqueue requests.
func EncodeEnqueueRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeEnqueueRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeEnqueueResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Enqueue responses.
func DecodeEnqueueResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeEnqueueResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeDequeueRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking Dequeue requests.
func EncodeDequeueRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeDequeueRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeDequeueResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Dequeue responses.
func DecodeDequeueResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeDequeueResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeRedirectRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking Redirect requests.
func EncodeRedirectRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeRedirectRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeRedirectResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Redirect responses.
func DecodeRedirectResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeRedirectResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeRejectRequest returns a go-kit EncodeRequestFunc suitable for encoding
// africastalking Reject requests.
func EncodeRejectRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeRejectRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeRejectResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Reject responses.
func DecodeRejectResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeRejectResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeMobileCheckoutRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking MobileCheckout requests.
func EncodeMobileCheckoutRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeMobileCheckoutRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeMobileCheckoutResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking MobileCheckout responses.
func DecodeMobileCheckoutResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeMobileCheckoutResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeMobileB2CRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking MobileB2C requests.
func EncodeMobileB2CRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeMobileB2CRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeMobileB2CResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking MobileB2C responses.
func DecodeMobileB2CResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeMobileB2CResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeMobileB2BRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking MobileB2B requests.
func EncodeMobileB2BRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeMobileB2BRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeMobileB2BResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking MobileB2B responses.
func DecodeMobileB2BResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeMobileB2BResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeBankCheckoutRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking Bank Checkout requests.
func EncodeBankCheckoutRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeBankCheckoutRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeBankCheckoutResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Bank Checkout responses.
func DecodeBankCheckoutResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeBankCheckoutResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeBankCheckoutValidateRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking BankCheckoutValidate requests.
func EncodeBankCheckoutValidateRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeBankCheckoutValidateRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeBankCheckoutValidateResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking BankCheckoutValidate responses.
func DecodeBankCheckoutValidateResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeBankCheckoutValidateResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeBankTransferRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking BankTransfer requests.
func EncodeBankTransferRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeBankTransferRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeBankTransferResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking BankTransfer responses.
func DecodeBankTransferResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeBankTransferResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeCardCheckoutRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking CardCheckout requests.
func EncodeCardCheckoutRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeCardCheckoutRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeCardCheckoutResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking CardCheckout responses.
func DecodeCardCheckoutResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeCardCheckoutResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeCardCheckoutValidateRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking CardCheckoutValidate requests.
func EncodeCardCheckoutValidateRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeCardCheckoutValidateRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeCardCheckoutValidateResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking CardCheckoutValidate responses.
func DecodeCardCheckoutValidateResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeCardCheckoutValidateResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeWalletTransferRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking WalletTransfer requests.
func EncodeWalletTransferRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeWalletTransferRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeWalletTransferResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking WalletTransfer responses.
func DecodeWalletTransferResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeWalletTransferResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeTopupStashRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking TopupStash requests.
func EncodeTopupStashRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeTopupStashRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeTopupStashResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking TopupStash responses.
func DecodeTopupStashResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeTopupStashResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFindTransactionRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking FindTransaction requests.
func EncodeFindTransactionRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFindTransactionRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFindTransactionResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking FindTransaction responses.
func DecodeFindTransactionResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFindTransactionResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFetchProductTransactionsRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking FetchProductTransactions requests.
func EncodeFetchProductTransactionsRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFetchProductTransactionsRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFetchProductTransactionsResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking FetchProductTransactions responses.
func DecodeFetchProductTransactionsResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFetchProductTransactionsResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFetchWalletTransactionsRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking FetchWalletTransactions requests.
func EncodeFetchWalletTransactionsRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFetchWalletTransactionsRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFetchWalletTransactionsResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking FetchWalletTransactions responses.
func DecodeFetchWalletTransactionsResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFetchWalletTransactionsResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeFetchWalletBalanceRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking FetchWalletBalance requests.
func EncodeFetchWalletBalanceRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeFetchWalletBalanceRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeFetchWalletBalanceResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking FetchWalletBalance responses.
func DecodeFetchWalletBalanceResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeFetchWalletBalanceResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSendAirtimeRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking SendAirtime requests.
func EncodeSendAirtimeRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSendAirtimeRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSendAirtimeResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking SendAirtime responses.
func DecodeSendAirtimeResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSendAirtimeResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePublishIoTRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking PublishIoT requests.
func EncodePublishIoTRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePublishIoTRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePublishIoTResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking PublishIoT responses.
func DecodePublishIoTResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePublishIoTResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeInitiateAppDataRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking InitiateAppData requests.
func EncodeInitiateAppDataRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeInitiateAppDataRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeInitiateAppDataResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking InitiateAppData responses.
func DecodeInitiateAppDataResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeInitiateAppDataResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeGenerateRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking Generate requests.
func EncodeGenerateRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeGenerateRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeGenerateResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking Generate responses.
func DecodeGenerateResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeGenerateResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}
